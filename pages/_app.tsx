import "../styles/globals.css";
import type { AppProps } from "next/app";
import { QueryClientProvider, QueryClient } from "@tanstack/react-query";
import { SessionProvider } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import UserInfo from "components/UserInfo";

export default function App({
  Component,
  pageProps: { session, ...pageProps },
}: AppProps) {
  const queryClient = new QueryClient({
    defaultOptions: {
      queries: { staleTime: Infinity },
    },
  });

  // TODO: Head부분 og태그 넣기

  return (
    <SessionProvider session={session}>
      <QueryClientProvider client={queryClient}>
        <div className="mt-5 mb-10 px-20 ">
          <Head>
            <title>Belisy Commerce</title>
            <meta charSet="utf-8" />
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />

            {/* 나중에 content넣기 */}
            <meta property="og:url" content="" />
            <meta property="og:type" content="" />
            <meta property="og:title" content="" />
            <meta property="og:description" content="" />
          </Head>
          <div className="text-center">
            <div className="my-10 text-7xl font-bold text-pink-500">
              Belisy Commerce
            </div>
          </div>
          <UserInfo />

          <Component {...pageProps} />

          <footer className="mt-10 text-center">
            <div className="border mb-3"></div>
            <div>문의: lssoy77@gmail.com</div>
            <a
              href="https://github.com/Belisy/belisy-commerce"
              target="_blank"
              rel="noopener noreferrer"
            >
              <span>
                <Image
                  className="mx-auto mt-3"
                  src="/vercel.svg"
                  alt="Logo"
                  width={72}
                  height={16}
                />
              </span>
            </a>
          </footer>
        </div>
      </QueryClientProvider>
    </SessionProvider>
  );
}
